"use strict";(self.webpackChunkfgs_docs=self.webpackChunkfgs_docs||[]).push([[380],{2555:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=r(4848),l=r(8453);const o={},s="Le syst\xe8me ViewportModel",i={id:"FGS/Systems/ViewportModel",title:"Le syst\xe8me ViewportModel",description:"Permet de manipuler et d'afficher des mod\xe8les dans une vue de type ViewportFrame avec diverses m\xe9thodes de calibration et d'ajustement.",source:"@site/docs/FGS/Systems/ViewportModel.md",sourceDirName:"FGS/Systems",slug:"/FGS/Systems/ViewportModel",permalink:"/FGS_Docs/FGS_Docs/FGS/Systems/ViewportModel",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Le syst\xe8me PlayerStorage",permalink:"/FGS_Docs/FGS_Docs/FGS/Systems/PlayerStorage"}},a={},c=[{value:"M\xe9thodes",id:"m\xe9thodes",level:2},{value:"new(vpf: ViewportFrame, camera: Camera)",id:"newvpf-viewportframe-camera-camera",level:3},{value:"SetModel(model: Model)",id:"setmodelmodel-model",level:3},{value:"Calibrate()",id:"calibrate",level:3},{value:"GetFitDistance(focusPosition: Vector3?)",id:"getfitdistancefocusposition-vector3",level:3},{value:"GetMinimumFitCFrame(orientation: CFrame)",id:"getminimumfitcframeorientation-cframe",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"le-syst\xe8me-viewportmodel",children:"Le syst\xe8me ViewportModel"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Permet de manipuler et d'afficher des mod\xe8les dans une vue de type ViewportFrame avec diverses m\xe9thodes de calibration et d'ajustement."}),"\n"]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsx)(n.h2,{id:"m\xe9thodes",children:"M\xe9thodes"}),"\n",(0,t.jsx)(n.p,{children:"Voici la liste des m\xe9thodes dont vous aurez besoin pour vos scripts."}),"\n",(0,t.jsx)(n.h3,{id:"newvpf-viewportframe-camera-camera",children:"new(vpf: ViewportFrame, camera: Camera)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Param\xe8tres:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["vpf ",(0,t.jsx)(n.code,{children:"@ViewportFrame"})]}),": La frame de la vue"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["camera ",(0,t.jsx)(n.code,{children:"@Camera"})]}),": La cam\xe9ra utilis\xe9e pour la vue"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Cette fonction cr\xe9e une nouvelle instance de ViewportModelClass."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local ViewportModel = self.FGS:GetSystem("ViewportModel")\r\nlocal GUI = self.FGS:GetSystem("GUI")\r\nlocal LeGUIqueJeVeux = GUI:GetGUI("NomDeMonScreenGUI")\r\n\r\nlocal vpf = LeGUIqueJeVeux:FindFirstChild("MyButton")\r\nlocal camera = vpf.CurrentCamera\r\n\r\nlocal modelViewer = ViewportModel.new(vpf, camera)\n'})}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsx)(n.h3,{id:"setmodelmodel-model",children:"SetModel(model: Model)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Param\xe8tres:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["model ",(0,t.jsx)(n.code,{children:"@Model"})]}),": Le mod\xe8le \xe0 afficher dans la vue"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Cette fonction permet de d\xe9finir le mod\xe8le \xe0 afficher dans la vue."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local ViewportModel = self.FGS:GetSystem("ViewportModel")\r\nlocal model = workspace:WaitForChild("MyModel")\r\n\r\nmodelViewer:SetModel(model)\n'})}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsx)(n.h3,{id:"calibrate",children:"Calibrate()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Cette fonction doit \xeatre appel\xe9e lorsque quelque chose change dans le ViewportFrame ou la cam\xe9ra, par exemple la taille de la frame ou le champ de vision de la cam\xe9ra."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local ViewportModel = self.FGS:GetSystem("ViewportModel")\r\n\r\nmodelViewer:Calibrate()\n'})}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsx)(n.h3,{id:"getfitdistancefocusposition-vector3",children:"GetFitDistance(focusPosition: Vector3?)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Param\xe8tres:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["focusPosition ",(0,t.jsx)(n.code,{children:"@Vector3?"})]})," (Optionnel): La position de mise au point"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Cette fonction retourne une distance fixe qui garantit d'encapsuler compl\xe8tement le mod\xe8le. Utile pour tourner librement autour d'un objet sans calculs co\xfbteux."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local ViewportModel = self.FGS:GetSystem("ViewportModel")\r\n\r\nlocal fitDistance = modelViewer:GetFitDistance()\r\nprint("Distance d\'ajustement:", fitDistance)\n'})}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsx)(n.h3,{id:"getminimumfitcframeorientation-cframe",children:"GetMinimumFitCFrame(orientation: CFrame)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Param\xe8tres:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["orientation ",(0,t.jsx)(n.code,{children:"@CFrame"})]}),": L'orientation pour ajuster la vue"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Cette fonction retourne le CFrame optimal de la cam\xe9ra n\xe9cessaire pour ajuster au mieux le mod\xe8le dans la ViewportFrame \xe0 l'orientation donn\xe9e."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local ViewportModel = self.FGS:GetSystem("ViewportModel")\r\nlocal orientation = CFrame.new(0, 0, 0)\r\n\r\nlocal minFitCFrame = modelViewer:GetMinimumFitCFrame(orientation)\r\nprint("CFrame d\'ajustement minimal:", minFitCFrame)\n'})})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var t=r(6540);const l={},o=t.createContext(l);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);